<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Forum extends \App\Entity\Forum implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'photo', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'photoFile', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'isEnabled', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'storylines', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'podcasts'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'photo', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'photoFile', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'isEnabled', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'storylines', '' . "\0" . 'App\\Entity\\Forum' . "\0" . 'podcasts'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Forum $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(?string $image): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $createdAt): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeInterface $updatedAt): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto(?string $photo): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$photo]);

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function isIsEnabled(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isIsEnabled', []);

        return parent::isIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled(bool $isEnabled): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getStorylines(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStorylines', []);

        return parent::getStorylines();
    }

    /**
     * {@inheritDoc}
     */
    public function addStoryline(\App\Entity\Storyline $storyline): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStoryline', [$storyline]);

        return parent::addStoryline($storyline);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStoryline(\App\Entity\Storyline $storyline): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStoryline', [$storyline]);

        return parent::removeStoryline($storyline);
    }

    /**
     * {@inheritDoc}
     */
    public function setPhotoFile(\Symfony\Component\HttpFoundation\File\File $imageFile = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhotoFile', [$imageFile]);

        parent::setPhotoFile($imageFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotoFile(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotoFile', []);

        return parent::getPhotoFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getPodcasts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPodcasts', []);

        return parent::getPodcasts();
    }

    /**
     * {@inheritDoc}
     */
    public function addPodcast(\App\Entity\Podcast $podcast): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPodcast', [$podcast]);

        return parent::addPodcast($podcast);
    }

    /**
     * {@inheritDoc}
     */
    public function removePodcast(\App\Entity\Podcast $podcast): \App\Entity\Forum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePodcast', [$podcast]);

        return parent::removePodcast($podcast);
    }

}
